
package Lab7P2_JafetHou;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.table.DefaultTableModel;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

public class InterfazSupermercado extends javax.swing.JFrame {

    /**
     * Creates new form InterfazSupermercado
     */
    public InterfazSupermercado() {
        initComponents();
        this.setLocationRelativeTo(null);
        model = (DefaultTableModel)this.jtable_Inventario.getModel();
    }
DefaultTableModel model;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpp_table = new javax.swing.JPopupMenu();
        jmi_ClearTable = new javax.swing.JMenuItem();
        jpp_Arbol = new javax.swing.JPopupMenu();
        jmi_LoadFile = new javax.swing.JMenuItem();
        jmi_RefreshTree = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jt_Comandos = new javax.swing.JTextField();
        jb_enter = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtree_Archivos = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtable_Inventario = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jmi_NewFile = new javax.swing.JMenuItem();
        jmi_ImportFile = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jmi_ClearLine = new javax.swing.JMenuItem();
        jmi_Clear = new javax.swing.JMenuItem();
        jmi_Refresh = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jmi_Structure = new javax.swing.JMenuItem();
        jmi_Commands = new javax.swing.JMenuItem();

        jmi_ClearTable.setText("Clear Table");
        jmi_ClearTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_ClearTableActionPerformed(evt);
            }
        });
        jpp_table.add(jmi_ClearTable);

        jmi_LoadFile.setText("Load File");
        jmi_LoadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_LoadFileActionPerformed(evt);
            }
        });
        jpp_Arbol.add(jmi_LoadFile);

        jmi_RefreshTree.setText("Refresh Tree");
        jmi_RefreshTree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_RefreshTreeActionPerformed(evt);
            }
        });
        jpp_Arbol.add(jmi_RefreshTree);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jt_Comandos.setBackground(new java.awt.Color(255, 255, 255));
        jt_Comandos.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jt_Comandos, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 390, 30));

        jb_enter.setBackground(new java.awt.Color(255, 255, 255));
        jb_enter.setForeground(new java.awt.Color(0, 0, 0));
        jb_enter.setText("Enter");
        jb_enter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_enterMouseClicked(evt);
            }
        });
        jPanel1.add(jb_enter, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 120, 30));

        jtree_Archivos.setBackground(new java.awt.Color(255, 255, 255));
        jtree_Archivos.setForeground(new java.awt.Color(0, 0, 0));
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("CSVs");
        jtree_Archivos.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jtree_Archivos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtree_ArchivosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtree_Archivos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 62, 160, 370));

        jtable_Inventario.setBackground(new java.awt.Color(255, 255, 255));
        jtable_Inventario.setForeground(new java.awt.Color(0, 0, 0));
        jtable_Inventario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Categoria", "Precio", "Aisle", "Bin"
            }
        ));
        jtable_Inventario.setSelectionBackground(new java.awt.Color(255, 0, 153));
        jtable_Inventario.setShowGrid(true);
        jtable_Inventario.setShowVerticalLines(false);
        jtable_Inventario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtable_InventarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtable_Inventario);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 440, 370));

        jMenu1.setText("File");

        jmi_NewFile.setText("New File");
        jmi_NewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_NewFileActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_NewFile);

        jmi_ImportFile.setText("Import File");
        jmi_ImportFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_ImportFileActionPerformed(evt);
            }
        });
        jMenu1.add(jmi_ImportFile);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Windows");

        jmi_ClearLine.setText("Clear Command Line");
        jmi_ClearLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_ClearLineActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_ClearLine);

        jmi_Clear.setText("Clear Table");
        jmi_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_ClearActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_Clear);

        jmi_Refresh.setText("Refresh Trees");
        jmi_Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_RefreshActionPerformed(evt);
            }
        });
        jMenu3.add(jmi_Refresh);

        jMenuBar1.add(jMenu3);

        jMenu2.setText("Help");

        jmi_Structure.setText("Product Structure");
        jmi_Structure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_StructureActionPerformed(evt);
            }
        });
        jMenu2.add(jmi_Structure);

        jmi_Commands.setText("Commands");
        jmi_Commands.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmi_CommandsActionPerformed(evt);
            }
        });
        jMenu2.add(jmi_Commands);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmi_ClearLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_ClearLineActionPerformed
        jt_Comandos.setText("");
    }//GEN-LAST:event_jmi_ClearLineActionPerformed

    private void jb_enterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_enterMouseClicked
        
        boolean comand = true;
        Pattern loat = Pattern.compile("^./load [a-zA-Z]{0,10}.txt$");
        Matcher texto = loat.matcher(jt_Comandos.getText());
        
        if(texto.matches()){
            
            load();
            comand = false;
            
        }
        
        Pattern creat = Pattern.compile("^./create [a-zA-Z]{0,10}.txt -single$");
        Matcher text = creat.matcher(jt_Comandos.getText());
        
        if(text.matches()){
            CrearArchivo();
            
            comand = false;
        }
        
        if(comand == true){
            
            if(jt_Comandos.getText().contentEquals("./clear")){

                cleartable();
                
            }else if(jt_Comandos.getText().contentEquals("./refresh")){
                
                refresh();
                
            }else{

                JOptionPane.showMessageDialog(this, "Commando Invalido");

            }
        }    
    }//GEN-LAST:event_jb_enterMouseClicked

    public void CrearArchivo(){
        
        Pattern creat = Pattern.compile("^./create [a-zA-Z]{0,10}.txt -single$");
        Matcher text = creat.matcher(jt_Comandos.getText());
        
        if(text.matches()){
        
            String nom[] = jt_Comandos.getText().split(" ");
        
            try {
                
                File archivo = new File("./Archivos/"+nom[1]);
                
                if(archivo.createNewFile()){
                    FileWriter fw;
                
                    fw = new FileWriter(archivo);
                    BufferedWriter bw = new BufferedWriter(fw);


                    for (int i = 0; i < this.jtable_Inventario.getRowCount(); i++) {
                        for (int j = 0; j < jtable_Inventario.getColumnCount(); j++) {
                            
                            if(jtable_Inventario.getValueAt(i, j) != null){
                                
                                bw.write(jtable_Inventario.getValueAt(i, j).toString()+",");
                                
                            }
                        }
                        bw.newLine();
                    }
                    
                    bw.close();
                    fw.close();
                    
                    JOptionPane.showMessageDialog(this, "Archivo "+nom+ "creado exitosamente");
                }

            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Archivo no creado");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese commando correcto para continuar");
        }
        
    }
    public void load(){
        Pattern loat = Pattern.compile("^./load [a-zA-Z]{0,10}.txt$");
        Matcher texto = loat.matcher(jt_Comandos.getText());
        
        if(texto.matches()){
            
            String nom[] = jt_Comandos.getText().split(" ");
            
            File file = new File("./Archivos/"+nom[1]);

            try {
                FileReader fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                Object[] lines = br.lines().toArray();
                
                model.setRowCount(0);
                for (int i = 0; i < lines.length; i++) {
                    String[] row = lines[i].toString().split(",");
                    model.addRow(row);
                }
                
            } catch (FileNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Error en agregar table");
            }
        }else{
            JOptionPane.showMessageDialog(this, "Ingrese el commando correcto");
        }    
        
    }
    public void refresh(){
        DefaultTreeModel modtree = (DefaultTreeModel)jtree_Archivos.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) modtree.getRoot();
        
        File file = new File("./Archivos/");
        File[] Archivo = file.listFiles();
        
        for (int i = 0; i < Archivo.length; i++) {
            
            if(Archivo[i].getName().contains(".txt")){
                DefaultMutableTreeNode refresh = new DefaultMutableTreeNode((File) Archivo[i]);
                root.add(refresh);
            }
        }
    }
    
    public void cleartable(){
        
        jtable_Inventario.setModel(new DefaultTableModel(new String[]{"Id","Nombre","Categoria","Precio","Aisle","Bin"}, 21));
    }
    
    private void jmi_CommandsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_CommandsActionPerformed
        JOptionPane.showMessageDialog(this, "Lista de Commandos: \n"
                + "Para cargar la tabla: ./load data.txt\n"
                + "Para la creación de archivos: ./create archivo.txt -single\n"
                + "Para limpiar la tabla: ./clear\n"
                + "Para cargar los árboles: ./refresh");
    }//GEN-LAST:event_jmi_CommandsActionPerformed

    private void jmi_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_ClearActionPerformed
        cleartable();
    }//GEN-LAST:event_jmi_ClearActionPerformed

    private void jmi_NewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_NewFileActionPerformed
        CrearArchivo();
    }//GEN-LAST:event_jmi_NewFileActionPerformed

    private void jtable_InventarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtable_InventarioMouseClicked
        if(evt.isMetaDown()){
            jpp_table.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jtable_InventarioMouseClicked

    private void jmi_ClearTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_ClearTableActionPerformed
        cleartable();
    }//GEN-LAST:event_jmi_ClearTableActionPerformed

    private void jtree_ArchivosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtree_ArchivosMouseClicked
        if(evt.isMetaDown()){
            jpp_Arbol.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_jtree_ArchivosMouseClicked

    private void jmi_RefreshTreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_RefreshTreeActionPerformed
        refresh();
    }//GEN-LAST:event_jmi_RefreshTreeActionPerformed

    private void jmi_ImportFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_ImportFileActionPerformed
        load();
    }//GEN-LAST:event_jmi_ImportFileActionPerformed

    private void jmi_StructureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_StructureActionPerformed
        JOptionPane.showMessageDialog(this, "Ingrese los productos por el siguiente orden:\n"
                + "(Int) ID, (String) Nombre, (Int) Categoria, (Double) Precio, (Int) Aisle, (Int) BIN");
    }//GEN-LAST:event_jmi_StructureActionPerformed

    private void jmi_RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_RefreshActionPerformed
        refresh();
    }//GEN-LAST:event_jmi_RefreshActionPerformed

    private void jmi_LoadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmi_LoadFileActionPerformed
        load();
    }//GEN-LAST:event_jmi_LoadFileActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazSupermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazSupermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazSupermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazSupermercado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazSupermercado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jb_enter;
    private javax.swing.JMenuItem jmi_Clear;
    private javax.swing.JMenuItem jmi_ClearLine;
    private javax.swing.JMenuItem jmi_ClearTable;
    private javax.swing.JMenuItem jmi_Commands;
    private javax.swing.JMenuItem jmi_ImportFile;
    private javax.swing.JMenuItem jmi_LoadFile;
    private javax.swing.JMenuItem jmi_NewFile;
    private javax.swing.JMenuItem jmi_Refresh;
    private javax.swing.JMenuItem jmi_RefreshTree;
    private javax.swing.JMenuItem jmi_Structure;
    private javax.swing.JPopupMenu jpp_Arbol;
    private javax.swing.JPopupMenu jpp_table;
    private javax.swing.JTextField jt_Comandos;
    private javax.swing.JTable jtable_Inventario;
    private javax.swing.JTree jtree_Archivos;
    // End of variables declaration//GEN-END:variables
}
